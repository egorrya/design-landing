@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

@mixin absCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin link {
  color: $color-black;
  text-decoration: none;
}

// media queries w/ breakboint
// phone, port, land, desk
// 1em = 16px
@mixin respond($breakpoint) {
  @if $breakpoint==phone-land {
    @media only screen and (max-width: 56.25em) and (orientation: landscape) {
      @content;
    }
  }

  @if $breakpoint==phone-big {
    @media only screen and (min-width: 30em) and (min-device-width: 480px) {
      // 480px
      @content;
    }
  }

  @if $breakpoint==tab-port {
    @media only screen and (min-width: 42.5em) and (min-device-width: 680px) {
      // 680px
      @content;
    }
  }

  @if $breakpoint==tab-land {
    @media only screen and (min-width: 56.25em) and (min-device-width: 900px) {
      // 900px
      @content;
    }
  }

  @if $breakpoint==desk {
    @media only screen and (min-width: 75em) {
      // 1200px
      @content;
    }
  }

  @if $breakpoint==big-desk {
    @media only screen and (min-width: 112.5em) {
      @content;
    }
  }
}

@mixin container {
  padding-left: 3rem;
  padding-right: 3rem;

  @include respond(tab-port) {
    padding-left: 4.6rem;
    padding-right: 4.6rem;
  }

  @include respond(desk) {
    padding-left: 3.7vw;
    padding-right: 3.7vw;

    // max-width: 119rem;
    // margin-left: auto;
    // margin-right: auto;
  }

  @include respond(phone-land) {
    // @include respond(tab-port) {
    padding-left: 3rem;
    padding-right: 3rem;
  }
}
